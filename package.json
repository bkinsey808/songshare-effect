{
	"name": "songshare-effect",
	"private": true,
	"version": "0.0.0",
	"type": "module",
	"scripts": {
		"dev:client": "vite",
		"dev:api": "cd api && wrangler dev --no-enable-containers --env dev",
		"dev": "npx kill-port 8787 5173 && npx concurrently \"npm run dev:client\" \"npm run dev:api\" --names \"frontend,api\" --prefix-colors \"blue,green\"",
		"dev:all": "npm run dev",
		"dev:debug": "npx concurrently \"npm run dev:all\" \"bash -lc 'if [ \"${AUTO_OPEN_CHROME:-0}\" = \"1\" ]; then npm run chrome:debug:secure; else echo \"Skipping chrome (AUTO_OPEN_CHROME not set)\"; fi'\" --names \"servers,chrome\" --prefix-colors \"cyan,yellow\"",
		"dev:debug:linux": "bash -lc 'nohup npm run dev:all > /tmp/dev-servers.log 2>&1 & DEV_PID=$!; sleep 1; if [ \"${AUTO_OPEN_CHROME:-0}\" = \"1\" ]; then nohup env USE_LINUX_CHROME=1 ./scripts/mcp/start-chrome-debug.sh > /tmp/chrome-debug.log 2>&1 & CH_PID=$!; else echo \"Skipping chrome start (AUTO_OPEN_CHROME not set)\"; CH_PID=0; fi; echo dev:$DEV_PID chrome:$CH_PID'",
		"dev:debug:insecure": "npx concurrently \"npm run dev:all\" \"bash -lc 'if [ \"${AUTO_OPEN_CHROME:-0}\" = \"1\" ]; then npm run chrome:debug; else echo \"Skipping chrome (AUTO_OPEN_CHROME not set)\"; fi'\" --names \"servers,chrome\" --prefix-colors \"cyan,yellow\"",
		"chrome:debug": "./scripts/mcp/start-chrome-debug.sh",
		"chrome:debug:linux:bg": "bash -lc \"nohup env USE_LINUX_CHROME=1 ./scripts/mcp/start-chrome-debug.sh > /tmp/chrome-debug.log 2>&1 & echo $!\"",
		"chrome:debug:secure": "./scripts/mcp/start-chrome-debug-secure.sh",
		"chrome:debug:linux": "USE_LINUX_CHROME=1 ./scripts/mcp/start-chrome-debug.sh",
		"chrome:test": "./scripts/mcp/test-chrome-mcp.sh",
		"chrome:test:console": "./scripts/mcp/test-console-logs.sh",
		"mcp:start": "./scripts/mcp/start-mcp.sh",
		"mcp:stop": "./scripts/mcp/stop-mcp.sh",
		"mcp:restart": "npm run mcp:stop && sleep 1 && npm run mcp:start",
		"mcp:status": "bash -c 'if [ -f \"scripts/mcp/mcp.pid\" ] && kill -0 $(cat scripts/mcp/mcp.pid) 2>/dev/null; then echo \"MCP pid: $(cat scripts/mcp/mcp.pid)\"; curl -sS http://localhost:9222/json || true; else echo \"MCP not running (no pid or process dead)\"; fi'",
		"mcp:logs": "tail -n +1 -f scripts/mcp/mcp.log",
		"mcp:wait": "bash -c 'for i in {1..20}; do curl -sS http://127.0.0.1:9222/json && exit 0 || sleep 0.5; done; echo \"MCP did not become ready\" >&2; exit 1'",
		"chrome:stop": "./scripts/mcp/stop-mcp.sh --kill-chrome",
		"debug:cdp-capture": "./scripts/mcp/capture-cdp.sh",
		"debug:cdp-capture:linux": "DEV_SERVER_PORT=5173 ./scripts/mcp/capture-cdp.sh",
		"debug:cdp-capture:signin": "bash -c 'DEV_SERVER_PORT=5173 nohup ./scripts/mcp/capture-cdp.sh 120000 > /tmp/cdp-capture-signin.json 2> /tmp/capture-signin-stderr.log & echo $!'",
		"build:client": "tsc -b && vite build",
		"build:api": "tsc -p api/tsconfig.json",
		"build": "npm run build:client && npm run build:api",
		"build:all": "npm run build",
		"deploy:api": "cd api && wrangler deploy",
		"lint": "NODE_OPTIONS=--max_old_space_size=4096 eslint react/src && eslint api/src && eslint shared/src && eslint scripts",
		"lint:fix": "eslint . --fix",
		"format": "prettier --write .",
		"format:check": "prettier --check .",
		"preview": "vite preview",
		"file:check": "bun run scripts/fileCheck.ts",
		"supabase:generate": "./scripts/generate-effect-schemas.sh",
		"supabase:keep-alive": "bun run scripts/keepAlive.ts",
		"supabase:export": "dotenv -e .env -- pg_dump --schema=public --schema-only --no-owner --no-privileges --format=plain > shared/src/generated/schema.sql",
		"dev:debug:linux:bg": "bash -lc 'nohup npm run dev:all > /tmp/dev-servers.log 2>&1 & DEV_PID=$!; if [ \"${AUTO_OPEN_CHROME:-0}\" = \"1\" ]; then nohup env USE_LINUX_CHROME=1 ./scripts/mcp/start-chrome-debug.sh > /tmp/chrome-debug.log 2>&1 & CH_PID=$!; else echo Skipping chrome start (AUTO_OPEN_CHROME not set); CH_PID=0; fi; echo dev:$DEV_PID chrome:$CH_PID'",
		"dev:mcp": "./scripts/mcp/start-dev-mcp.sh",
		"dev:mcp:stop": "./scripts/mcp/stop-dev-mcp.sh",
		"dev:mcp:clear-log": "bash -lc ': > /tmp/monitor.log && echo \"Cleared /tmp/monitor.log\"; if [ -f /tmp/dev-mcp-monitor.pid ]; then PID=$(cat /tmp/dev-mcp-monitor.pid 2>/dev/null || echo \"\"); if [ -n \"$PID\" ] && ! kill -0 $PID 2>/dev/null; then rm -f /tmp/dev-mcp-monitor.pid && echo \"Removed stale monitor pidfile: /tmp/dev-mcp-monitor.pid\"; else echo \"Monitor pidfile present (pid: $PID)\"; fi; fi'",
		"dev:servers:bg": "bash -lc '\n  nohup npm run dev:all > /tmp/dev-servers.log 2>&1 & echo $!\n'",
		"dev:mcp:restart": "npm run dev:mcp:stop && sleep 1 && npm run dev:mcp",
		"dev:monitor:tail": "bash -lc 'tail -n 200 -f /tmp/monitor.log'",
		"dev:monitor:status": "bash -lc 'if [ -f /tmp/dev-mcp-monitor.pid ]; then echo \"Monitor pid: $(cat /tmp/dev-mcp-monitor.pid)\"; ps -fp $(cat /tmp/dev-mcp-monitor.pid) || true; else echo \"No monitor pidfile\"; fi'",
		"deploy:pages": "npm run build:client && node ./scripts/prepare-functions.mjs && dotenv -e .env -- bash -lc 'cd dist && npx wrangler pages deploy . --project-name=\"$CLOUDFLARE_PROJECT\" --branch=main --commit-dirty=true'",
		"deploy:worker": "npm run build:api && cd api && npx wrangler deploy",
		"deploy": "npm run deploy:pages && npm run deploy:worker"
	},
	"dependencies": {
		"@supabase/supabase-js": "^2.58.0",
		"effect": "^3.18.4",
		"i18next": "^23.16.8",
		"react": "^19.2.0",
		"react-compiler-runtime": "19.1.0-rc.3",
		"react-dom": "^19.2.0",
		"react-i18next": "^15.7.4",
		"react-router": "^7.9.1",
		"react-router-dom": "^7.9.1",
		"zustand": "^5.0.8"
	},
	"devDependencies": {
		"@babel/core": "^7.28.4",
		"@cloudflare/workers-types": "^4.20250924.0",
		"@cspell/eslint-plugin": "^8.15.4",
		"@eslint/js": "^9.36.0",
		"@shopify/eslint-plugin": "^50.0.0",
		"@tailwindcss/postcss": "^4.1.13",
		"@trivago/prettier-plugin-sort-imports": "^5.2.2",
		"@types/node": "^24.5.2",
		"@types/react": "^19.2.0",
		"@types/react-dom": "^19.2.0",
		"@types/react-i18next": "^7.8.3",
		"@vitejs/plugin-react": "^5.0.3",
		"autoprefixer": "^10.4.21",
		"babel-plugin-react-compiler": "1.0.0",
		"chrome-devtools-mcp": "^0.8.1",
		"concurrently": "^9.2.1",
		"cspell": "^9.2.1",
		"dotenv-cli": "^10.0.0",
		"eslint": "^9.36.0",
		"eslint-plugin-boundaries": "^5.0.2",
		"eslint-plugin-import": "^2.31.0",
		"eslint-plugin-jsdoc": "^50.5.0",
		"eslint-plugin-jsx-a11y": "^6.10.2",
		"eslint-plugin-prettier": "^5.2.1",
		"eslint-plugin-promise": "^7.1.0",
		"eslint-plugin-react-hooks": "^7.0.0",
		"eslint-plugin-react-refresh": "^0.4.20",
		"eslint-plugin-security": "^3.0.1",
		"eslint-plugin-sonarjs": "^3.0.5",
		"eslint-plugin-storybook": "^0.11.1",
		"eslint-plugin-unicorn": "^57.0.0",
		"globals": "^16.4.0",
		"hono": "^4.9.8",
		"postcss": "^8.5.6",
		"prettier": "^3.6.2",
		"prettier-plugin-tailwindcss": "^0.6.14",
		"puppeteer": "^24.24.1",
		"react-compiler-healthcheck": "19.1.0-rc.3",
		"supabase": "^2.45.5",
		"tailwindcss": "^4.1.13",
		"typescript": "~5.9.2",
		"typescript-eslint": "^8.44.0",
		"typescript-file-checker": "^0.1.3",
		"vite": "npm:rolldown-vite@7.1.12",
		"wrangler": "^4.42.0",
		"ws": "^8.18.3"
	},
	"overrides": {
		"vite": "npm:rolldown-vite@7.1.12"
	},
	"packageManager": "npm@10.13.1"
}
